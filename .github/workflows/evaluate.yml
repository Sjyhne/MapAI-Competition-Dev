# This is a basic workflow to help you get started with Actions

name: Evaluation Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  evaluation:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      # If not field github.event.pull_request exists, then do first forloop
      - name: Evaluation
        run: |
          if [ -z ${{ github.event.pull_request }} ]; then
            for d in team_*/ ; do
                cp data/evaluation.py "$d"/.
                cd $d
                pip3 install -r requirements.txt
                huggingface-cli login
                ${{ secrets.HF_EVAL_ACCESS_TOKEN }}
                python3 evaluate_task_1.py --data_percentage 0.01 --dtype task1
                python3 evaluate_task_2.py --data_percentage 0.01 --dtype task2
                python3 evaluation.py --data_percentage 0.01 --dtype task1 --task 1
                python3 evaluation.py --data_percentage 0.01 --dtype task2 --task 2
                echo Finished evaluation, exiting
                cd ..
            done
          else
            for d in team_*/ ; do
                cp data/evaluation.py "$d"/.
                cd $d
                pip3 install -r requirements.txt
                echo " "
                echo -------------------
                echo |Evaluating task 1|
                echo -------------------
                python3 evaluate_task_1.py --data_percentage 0.01 --dtype validation
                python3 evaluation.py --data_percentage 0.01 --dtype validation --task 1
                echo " "
                echo -------------------
                echo |Evaluating task 2|
                echo -------------------
                python3 evaluate_task_2.py --data_percentage 0.01 --dtype validation
                python3 evaluation.py --data_percentage 0.01 --dtype validation --task 2
                echo " "
                echo Finished evaluation, exiting
                cd ..
            done
          fi